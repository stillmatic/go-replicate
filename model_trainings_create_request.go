/*
Replicate HTTP API

A web service for running Replicate models

API version: 1.0.0-a1
Contact: team@replicate.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package replicate

import (
	"encoding/json"
)

// checks if the TrainingsCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrainingsCreateRequest{}

// TrainingsCreateRequest struct for TrainingsCreateRequest
type TrainingsCreateRequest struct {
	// A string representing the desired model to push to in the format `{destination_model_owner}/{destination_model_name}`. This should be an existing model owned by the user or organization making the API request. If the destination is invalid, the server returns an appropriate 4XX response.
	Destination interface{} `json:"destination,omitempty"`
	// An object containing inputs to the Cog model's `train()` function.
	Input interface{} `json:"input,omitempty"`
	// An HTTPS URL for receiving a webhook when the training completes. The webhook will be a POST request where the request body is the same as the response body of the [get training](#trainings.get) operation. If there are network problems, we will retry the webhook a few times, so make sure it can be safely called more than once.
	Webhook interface{} `json:"webhook,omitempty"`
}

// NewTrainingsCreateRequest instantiates a new TrainingsCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrainingsCreateRequest() *TrainingsCreateRequest {
	this := TrainingsCreateRequest{}
	return &this
}

// NewTrainingsCreateRequestWithDefaults instantiates a new TrainingsCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrainingsCreateRequestWithDefaults() *TrainingsCreateRequest {
	this := TrainingsCreateRequest{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrainingsCreateRequest) GetDestination() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrainingsCreateRequest) GetDestinationOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return &o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *TrainingsCreateRequest) HasDestination() bool {
	if o != nil && IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given interface{} and assigns it to the Destination field.
func (o *TrainingsCreateRequest) SetDestination(v interface{}) {
	o.Destination = v
}

// GetInput returns the Input field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrainingsCreateRequest) GetInput() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrainingsCreateRequest) GetInputOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return &o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TrainingsCreateRequest) HasInput() bool {
	if o != nil && IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given interface{} and assigns it to the Input field.
func (o *TrainingsCreateRequest) SetInput(v interface{}) {
	o.Input = v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrainingsCreateRequest) GetWebhook() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrainingsCreateRequest) GetWebhookOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Webhook) {
		return nil, false
	}
	return &o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *TrainingsCreateRequest) HasWebhook() bool {
	if o != nil && IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given interface{} and assigns it to the Webhook field.
func (o *TrainingsCreateRequest) SetWebhook(v interface{}) {
	o.Webhook = v
}

func (o TrainingsCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrainingsCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.Webhook != nil {
		toSerialize["webhook"] = o.Webhook
	}
	return toSerialize, nil
}

type NullableTrainingsCreateRequest struct {
	value *TrainingsCreateRequest
	isSet bool
}

func (v NullableTrainingsCreateRequest) Get() *TrainingsCreateRequest {
	return v.value
}

func (v *NullableTrainingsCreateRequest) Set(val *TrainingsCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTrainingsCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTrainingsCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrainingsCreateRequest(val *TrainingsCreateRequest) *NullableTrainingsCreateRequest {
	return &NullableTrainingsCreateRequest{value: val, isSet: true}
}

func (v NullableTrainingsCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrainingsCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


